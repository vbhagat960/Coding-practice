/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // vector<int> vect;
    // void inOrder(TreeNode* root)
    // {
    //     if(root != NULL)
    //     {
    //         inOrder(root->left);
    //         vect.push_back(root->val);
    //         inOrder(root->right);
    //     }
    // }
    vector<int> inorderTraversal(TreeNode* root) {
        stack<TreeNode*> stck;
        vector<int> vect;
        bool done = false;
        while(!done)
        {
            if(root != NULL)
            {
                stck.push(root);
                root = root->left;
            }
            else
            {
                if(stck.empty()) 
                {
                    done = true;
                }
                else
                {
                    root = stck.top();
                    vect.push_back(root->val);
                    root = root->right;
                    stck.pop();
                }
            }
        }
        
        return vect;
    }
};
